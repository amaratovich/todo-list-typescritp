{"version":3,"sources":["store/types.ts","utils/api.ts","store/actions.ts","components/TodoList.tsx","store/typeHooks.ts","components/Loader.tsx","components/TodoItem.tsx","pages/Home.tsx","pages/404.tsx","pages/ChosenItemsPage.tsx","pages/DeletedItemsPage.tsx","pages/ActiveItemsPage.tsx","pages/EditTodoPage.tsx","pages/CompleteItems.tsx","routes/router.tsx","components/Navbar.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","store/reducer.ts","index.tsx"],"names":["actionTypes","getAllTodos","a","Fetch","method","getTodo","id","patchTodo","item","body","deleteTodo","setToDeleteBasketTodo","addTodo","todo","chosenTodo","completeTodo","path","options","JSON","stringify","Promise","resolve","reject","fetch","headers","then","response","ok","json","catch","err","set_all_todos","data","type","SET_ALL_TODOS","payload","add_todo","ADD_TODO","change_loading","loading","CHANGE_LOADING","TodoList","edit","dispatch","useDispatch","useState","title","setTitle","navigate","useNavigate","useParams","input","useRef","postTodo","date","Date","toString","deleted","chosen","complete","name","alert","changeHandler","e","target","value","useEffect","current","focus","className","onSubmit","preventDefault","_","onChange","ref","htmlFor","role","trim","useTypeSelector","useSelector","Loader","SmallLoader","style","width","height","TodoItem","refreshData","deleteIconLoad","setDeleteIconLoad","setBasketDeleteIcon","setSetBasketDeleteIcon","bookmarkIconLoad","setBookmarkIconLoad","checkedIconLoad","setCheckedIconLoad","state","deleteTodoHandler","setToDeleteBasketHandler","deletedBool","chosenTodoHandler","chosenBool","changeCompleteHandler","completeBool","activeClasses","push","onClick","join","checked","color","to","Home","todos","getAllTodosHandler","key","Object","keys","map","console","log","elements","filter","i","length","el","src","alt","renderItemHandler","NotFoundPage","children","ChosenItemsPage","DeletedItemsPage","ActiveItemsPage","EditTodoPage","CompleteItems","RoutesComponent","element","Navbar","Footer","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab63c582.chunk.js","sourcesContent":["export enum actionTypes {\n    ADD_TODO='ADD_TODO',\n    SET_ALL_TODOS='SET_ALL_TODOS',\n    DELETE_TODO='DELETE_TODO',\n    EDIT_TODO='EDIT_TODO',\n    CHANGE_LOADING='CHANGE_LOADING',\n}\n","import {IChosenItem, ICompleteItem, IDeleteItem, IFetchTodo, IPatchItem} from \"./interfaces\";\nconst DEF_URL = 'https://ts-todo-app-b3563-default-rtdb.europe-west1.firebasedatabase.app/'\n\nexport const getAllTodos = async () => await Fetch('todos.json',{\n    method: 'GET',\n})\nexport const getTodo = async (id: string | number) => await Fetch(`todos/${id}.json`,{\n    method: 'GET',\n})\nexport const patchTodo = async (id: string | number, item: IPatchItem) => await Fetch(`todos/${id}.json`,{\n    method: 'PATCH',\n    body: item\n})\nexport const deleteTodo = async (id: string | number) => await Fetch(`todos/${id}.json`,{\n    method: 'DELETE',\n})\nexport const setToDeleteBasketTodo = async (id: string | number, item: IDeleteItem) => await Fetch(`todos/${id}.json`,{\n    method: 'PATCH',\n    body: item\n})\nexport const addTodo = async (todo: IFetchTodo) => await Fetch('todos.json',{\n    method: 'POST',\n    body: todo\n})\nexport const chosenTodo = async (id: number | string,item: IChosenItem) => await Fetch(`todos/${id}.json`,{\n    method: 'PATCH',\n    body: item\n})\nexport const completeTodo = async (id: number | string,item: ICompleteItem) => await Fetch(`todos/${id}.json`,{\n    method: 'PATCH',\n    body: item\n})\n\n\ntype HttpOptions = {\n    method: string,\n    body? : any\n}\n\nconst Fetch = (path:string, options: HttpOptions): Promise<any> => {\n    if (options.method !== 'GET' && options.method !== 'DELETE') {\n        options.body = JSON.stringify(options.body)\n    }\n    const promise = new Promise((resolve, reject) => {\n        fetch(`${DEF_URL}${path}`, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            ...options\n        })\n            .then(response => {\n                if (response.ok) {\n                        resolve(response.json())\n                } else {\n                    reject(response)\n                }\n            })\n            .catch(err => reject(err))\n    })\n    return promise\n}","import {IReduxActionAddTodo, IReduxActionChangeLoading, IReduxActionSetAllTodos, ITodoElem} from \"../utils/interfaces\";\nimport {actionTypes} from \"./types\";\n\nexport const set_all_todos = ( data : ITodoElem[]) : IReduxActionSetAllTodos => ({\n    type: actionTypes.SET_ALL_TODOS,\n    payload: data\n})\nexport const add_todo = ( data : ITodoElem) : IReduxActionAddTodo => ({\n    type: actionTypes.ADD_TODO,\n   payload: data\n})\nexport const change_loading = ( loading : boolean) : IReduxActionChangeLoading => ({\n    type: actionTypes.CHANGE_LOADING,\n    payload: loading\n})","import React, {useEffect, useRef, useState} from \"react\";\nimport {addTodo, getTodo, patchTodo} from \"../utils/api\";\nimport {useDispatch} from \"react-redux\";\nimport {add_todo} from \"../store/actions\";\nimport {IFetchTodo, ITodoListProps} from \"../utils/interfaces\";\nimport { useNavigate, useParams} from \"react-router-dom\";\n\n\nexport const TodoList: React.FC<ITodoListProps> = ({edit}) => {\n\n    const dispatch = useDispatch()\n    const [title, setTitle] = useState<string>('')\n    const navigate = useNavigate()\n    const {id} = useParams()\n    const input = useRef<HTMLInputElement>(null)\n\n    const postTodo = async () : Promise<any> => {\n        const data : IFetchTodo= {\n            title,\n            date: new Date().toString(),\n            deleted: false,\n            chosen: false,\n            complete: false\n        }\n        try {\n            const response = await addTodo(data)\n            dispatch(add_todo({\n                ...data,\n                id: response.name\n            }))\n            setTitle('')\n        } catch (e) {\n            alert(e)\n        }\n    }\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) : void => {\n        setTitle(e.target.value)\n    }\n    const onSubmitHandler = (e : React.FormEvent<HTMLFormElement>) : void=> {\n        e.preventDefault()\n        title.trim() && postTodo()\n    }\n    useEffect(() => {\n        if (edit) {\n            getTodo(id || '').then(todo => {\n                if(todo) {\n                    input.current!.focus()\n                    setTitle(todo.title)\n                } else {navigate('/')}\n            })\n        }\n    },[])\n    const saveTodoHandler = (e : React.FormEvent<HTMLFormElement>): void => {\n        e.preventDefault()\n        patchTodo(id || '',{title}).then(_ => navigate('/'))\n    }\n    if (edit) {\n        return (\n            <div className={'todo_wrapper mT-4'}>\n                <div className=\"row\">\n                    <form className=\"col s10 m12\" onSubmit={saveTodoHandler}>\n                        <div className=\"row\">\n                            <div className=\"input-field col s11\">\n                                <i className=\"material-icons prefix\">create</i>\n                                <input id=\"icon_telephone\" type=\"tel\" className=\"validate\" value={title} onChange={changeHandler} ref={input}/>\n                                <label htmlFor=\"icon_telephone\">Edit Todo</label>\n                                <a className={'submit-a'}>\n                                    <i role={'button'} className=\"material-icons prefix\">check</i>\n                                    <button type={'submit'}>b</button>\n                                </a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className={'todo_wrapper'}>\n            <div className=\"row\">\n                <form className=\"col s10 m12\" onSubmit={onSubmitHandler}>\n                    <div className=\"row\">\n\n                            <div className=\"input-field col s11\">\n                                <i className=\"material-icons prefix\">create</i>\n                                <input id=\"icon_telephone\" type=\"tel\" className=\"validate\" value={title} onChange={changeHandler}/>\n                                <label htmlFor=\"icon_telephone\">New Todo</label>\n                            </div>\n                        <div className=\"input-field col s1\">\n                            <button type={'submit'} className=\"btn-floating pulse btn-large waves-effect waves-light indigo\">\n                                <i className=\"material-icons\">add</i>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}","import {useSelector,TypedUseSelectorHook} from \"react-redux\";\nimport {rootTypeReducer} from \"./reducer\";\n\nexport const useTypeSelector : TypedUseSelectorHook<rootTypeReducer> = useSelector","import React from \"react\";\n\nexport const Loader : React.FC = ()  => {\n    return (\n        <div className={'loader'}>\n            <div className=\"preloader-wrapper big active\" >\n                <div className=\"spinner-layer spinner-blue-only\">\n                    <div className=\"circle-clipper left\">\n                        <div className=\"circle\"></div>\n                    </div>\n                    <div className=\"gap-patch\">\n                        <div className=\"circle\"></div>\n                    </div>\n                    <div className=\"circle-clipper right\">\n                        <div className=\"circle\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport const SmallLoader : React.FC = ()  => {\n    return (\n        <div className=\"preloader-wrapper small active\" style={{width: 20, height:20}}>\n            <div className=\"spinner-layer spinner-green-only\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {Dispatch, useState} from \"react\";\nimport {ITodoItemProps} from \"../utils/interfaces\";\nimport {chosenTodo, completeTodo, deleteTodo, setToDeleteBasketTodo} from \"../utils/api\";\nimport {Link} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {Action} from \"redux\";\nimport {change_loading} from \"../store/actions\";\nimport {useTypeSelector} from \"../store/typeHooks\";\nimport {Loader, SmallLoader} from \"./Loader\";\n\nexport const TodoItem: React.FC<ITodoItemProps> = ({todo,refreshData}) => {\n    const [deleteIconLoad, setDeleteIconLoad] = useState<boolean>(false)\n    const [setBasketDeleteIcon, setSetBasketDeleteIcon] = useState<boolean>(false)\n    const [bookmarkIconLoad, setBookmarkIconLoad] = useState<boolean>(false)\n    const [checkedIconLoad, setCheckedIconLoad] = useState<boolean>(false)\n    const dispatch = useDispatch<Dispatch<Action>>()\n    const {loading} = useTypeSelector(state => state)\n\n    const deleteTodoHandler = async (id : number | string)  => {\n        setDeleteIconLoad(true)\n        await deleteTodo(id)\n        setDeleteIconLoad(false)\n        refreshData()\n    }\n    const setToDeleteBasketHandler = async (id : number | string, deletedBool: boolean)  => {\n        setSetBasketDeleteIcon(true)\n        await setToDeleteBasketTodo(id,{deleted: !deletedBool})\n        setSetBasketDeleteIcon(false)\n        refreshData()\n    }\n    const chosenTodoHandler = async (id: string | number, chosenBool: boolean) => {\n        setBookmarkIconLoad(true)\n        await chosenTodo(id,{chosen: !chosenBool })\n        setBookmarkIconLoad(false)\n        refreshData()\n    }\n    const changeCompleteHandler = async (id: string | number, completeBool: boolean)  => {\n        setCheckedIconLoad(true)\n        await completeTodo(id,{complete: !completeBool })\n        setCheckedIconLoad(false)\n        refreshData()\n    }\n    const activeClasses = ['collection-item']\n    if (todo.complete) {\n        activeClasses.push('active indigo')\n    }\n    if (loading) {\n        return <Loader/>\n    }\n    if (todo.deleted) {\n        return (\n            <li className=\"collection-item\">\n                <div>\n                        {todo.title}\n                    <a className=\"secondary-content\">\n                        {\n                            deleteIconLoad\n                                ?\n                                <SmallLoader/>\n                                :\n                                <i className=\"material-icons\" onClick={() => deleteTodoHandler(todo.id)}>delete</i>\n                        }\n                    </a>\n                    <a className=\"secondary-content\">\n                        {\n                            setBasketDeleteIcon\n                                ?\n                                <SmallLoader/>\n                                :\n                                <i className=\"material-icons\" onClick={() => setToDeleteBasketHandler(todo.id, todo.deleted)}>{'reply'}</i>\n                        }\n                    </a>\n\n                </div>\n            </li>\n        )\n    }\n    return (\n            <li className={activeClasses.join(' ')}>\n                <div>\n                    <a>\n                        {\n                            checkedIconLoad\n                                ?\n                                <SmallLoader/>\n                                :<>\n                                <input type=\"checkbox\" className=\"filled-in\" checked={todo.complete}/>\n                                <span style={{color: \"transparent\"}} onClick={() => changeCompleteHandler(todo.id, todo.complete)}>i</span>\n                                </>\n                                }\n\n                    </a>\n                    {todo.title}\n                    <a className=\"secondary-content\">\n                        {\n                            bookmarkIconLoad\n                                ?\n                                <SmallLoader/>\n                                :\n                                <i className=\"material-icons\" onClick={() => chosenTodoHandler(todo.id, todo.chosen)}>{todo.chosen ? 'bookmark' : 'bookmark_border'}</i>\n                        }\n                    </a>\n                    <a className=\"secondary-content\">\n                        {\n                            deleteIconLoad\n                                ?\n                                <SmallLoader/>\n                                :\n                                <i className=\"material-icons\" onClick={() => setToDeleteBasketHandler(todo.id, todo.deleted)}>{'delete'}</i>\n                        }\n\n                    </a>\n                    <Link to={`/todo/${todo.id}`} className=\"secondary-content\">\n                        <i className=\"material-icons\">create</i>\n                    </Link>\n                </div>\n            </li>\n    )\n}","import React, {Dispatch, useEffect} from \"react\";\nimport {TodoList} from \"../components/TodoList\";\nimport {TodoItem} from \"../components/TodoItem\";\nimport {useTypeSelector} from \"../store/typeHooks\";\nimport {getAllTodos} from \"../utils/api\";\nimport {IReduxState, ITodoElem} from \"../utils/interfaces\";\nimport {change_loading, set_all_todos} from \"../store/actions\";\nimport {useDispatch} from \"react-redux\";\nimport {Action} from \"redux\";\nimport {Loader} from \"../components/Loader\";\n\nexport const Home: React.FC = () => {\n    const {todos, loading} = useTypeSelector<IReduxState>(state => state)\n    const dispatch = useDispatch<Dispatch<Action>>()\n    const getAllTodosHandler = async () : Promise<void> => {\n        try {\n            const response = await getAllTodos()\n            if(response) {\n                const key = Object.keys(response)\n                const data : ITodoElem[] = []\n                key.map(key => {\n                    data.push({...response[key], id: key})\n                })\n                dispatch(set_all_todos(data))\n            } else {\n                dispatch(set_all_todos([]))\n            }\n        } catch (e) {\n            console.log(e, 'e')\n        }\n    }\n    useEffect(() => {\n        dispatch(change_loading(true))\n        getAllTodosHandler().then(_ => dispatch(change_loading(false)))\n    },[])\n    const renderItemHandler = ()  => {\n        const elements : ITodoElem[] = todos.filter(i => !i.deleted)\n        if (!elements.length) {\n            return <div className={'center'}>\n                <img src=\"https://cdn.dribbble.com/users/634336/screenshots/2246883/media/7beefb96feac302ee313cf510fca4577.png?compress=1&resize=800x600\" alt=\"\"/>\n            </div>\n        }\n        return elements.map(el => (\n             <TodoItem key={el.id} todo={el} refreshData={getAllTodosHandler}/>\n        ))\n    }\n    return (\n        <>\n            <TodoList edit={false}/>\n                <ul className=\"collection col s12 m8 offset-m2 l6 offset-l3 mB-5\" >\n                {loading ? <Loader/> : renderItemHandler()}\n                </ul>\n        </>\n    )\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport const NotFoundPage: React.FC = () => {\n    return (\n        <>\n            <div className={'center mT-2'}>\n                <h4>\n                    <Link to={'/'} children={'Back To Home'}/>\n                </h4>\n                <img src=\"https://i.pinimg.com/564x/a6/c1/63/a6c1639daa955f333a497a2e571adbb1.jpg\" alt=\"\"/>\n                <h1>Not Found 404. </h1>\n            </div>\n        </>\n    )\n}","import React, {Dispatch, useEffect} from \"react\";\nimport {useTypeSelector} from \"../store/typeHooks\";\nimport {useDispatch} from \"react-redux\";\nimport {getAllTodos} from \"../utils/api\";\nimport {IReduxState, ITodoElem} from \"../utils/interfaces\";\nimport {set_all_todos} from \"../store/actions\";\nimport {TodoItem} from \"../components/TodoItem\";\nimport {Action} from \"redux\";\n\nexport const ChosenItemsPage: React.FC = () : JSX.Element => {\n    const {todos} = useTypeSelector<IReduxState>(state => state)\n    const dispatch = useDispatch<Dispatch<Action>>()\n    const getAllTodosHandler = async ()  => {\n        try {\n            const response = await getAllTodos()\n            if(response) {\n                const key = Object.keys(response)\n                const data : ITodoElem[] = []\n                key.map(key => {\n                    data.push({...response[key], id: key})\n                })\n                dispatch(set_all_todos(data))\n            } else {\n                dispatch(set_all_todos([]))\n            }\n        } catch (e) {\n            console.log(e, 'e')\n        }\n    }\n    useEffect(() => {\n        getAllTodosHandler()\n    },[])\n    const renderItemHandler = () => {\n        const elements : ITodoElem[] = todos.filter(i => i.chosen && !i.deleted)\n        if (!elements.length) {\n            return <div className={'center'}>\n                <img src=\"https://cdn.dribbble.com/users/634336/screenshots/2246883/media/7beefb96feac302ee313cf510fca4577.png?compress=1&resize=800x600\" alt=\"\"/>\n            </div>\n        }\n        return elements.map(el => (\n             <TodoItem key={el.id} todo={el} refreshData={getAllTodosHandler}/>\n         ))\n    }\n    return (\n        <>\n            <ul className=\"collection col s12 m8 offset-m2 l6 offset-l3 mB-5 mT-4\" >\n                {renderItemHandler()}\n            </ul>\n        </>\n    )\n}","import React, {Dispatch, useEffect} from \"react\";\nimport {TodoList} from \"../components/TodoList\";\nimport {TodoItem} from \"../components/TodoItem\";\nimport {useTypeSelector} from \"../store/typeHooks\";\nimport {getAllTodos} from \"../utils/api\";\nimport {IReduxState, ITodoElem} from \"../utils/interfaces\";\nimport {set_all_todos} from \"../store/actions\";\nimport {useDispatch} from \"react-redux\";\nimport {Action} from \"redux\";\nimport {rootTypeReducer} from \"../store/reducer\";\n\nexport const DeletedItemsPage: React.FC = () => {\n    const {todos} = useTypeSelector(state => state)\n    const dispatch = useDispatch()\n    const getAllTodosHandler = async ()  => {\n        try {\n            const response = await getAllTodos()\n            if(response) {\n                const key = Object.keys(response)\n                const data : ITodoElem[] = []\n                key.map(key => {\n                    data.push({...response[key], id: key})\n                })\n                dispatch(set_all_todos(data))\n            } else {\n                dispatch(set_all_todos([]))\n            }\n\n        } catch (e) {\n            console.log(e, 'e')\n        }\n    }\n    useEffect(() => {\n        getAllTodosHandler()\n    },[])\n    const renderItemHandler = () => {\n        const elements: ITodoElem[] = todos.filter(i => i.deleted)\n        if (!elements.length) {\n            return <div className={'center'}>\n                <img src=\"https://cdn.dribbble.com/users/634336/screenshots/2246883/media/7beefb96feac302ee313cf510fca4577.png?compress=1&resize=800x600\" alt=\"\"/>\n            </div>\n        }\n\n        return elements.map((el: ITodoElem) => (\n             <TodoItem key={el.id} todo={el} refreshData={getAllTodosHandler}/>\n            ))\n    }\n    return (\n        <>\n            <ul className=\"collection col s12 m8 offset-m2 l6 offset-l3 mB-5 mT-4\" >\n                {renderItemHandler()}\n            </ul>\n        </>\n    )\n}","import React, {Dispatch, useEffect} from \"react\";\nimport {useTypeSelector} from \"../store/typeHooks\";\nimport {useDispatch} from \"react-redux\";\nimport {getAllTodos} from \"../utils/api\";\nimport {IReduxState, ITodoElem} from \"../utils/interfaces\";\nimport {set_all_todos} from \"../store/actions\";\nimport {TodoItem} from \"../components/TodoItem\";\nimport {Action} from \"redux\";\n\nexport const ActiveItemsPage: React.FC = () : JSX.Element => {\n    const {todos} = useTypeSelector<IReduxState>(state => state)\n\n    const dispatch = useDispatch<Dispatch<Action>>()\n    const getAllTodosHandler = async () : Promise<any> => {\n        try {\n            const response = await getAllTodos()\n            if(response) {\n                const key = Object.keys(response)\n                const data : ITodoElem[] = []\n                key.map(key => {\n                    data.push({...response[key], id: key})\n                })\n                dispatch(set_all_todos(data))\n            } else {\n                dispatch(set_all_todos([]))\n            }\n\n        } catch (e) {\n            console.log(e, 'e')\n        }\n    }\n    useEffect(() => {\n        getAllTodosHandler()\n    },[])\n    const renderItemHandler = () => {\n        const elements :ITodoElem[] = todos.filter(i => !i.complete && !i.deleted)\n        if (!elements.length) {\n            return <div className={'center'}>\n                <img src=\"https://cdn.dribbble.com/users/634336/screenshots/2246883/media/7beefb96feac302ee313cf510fca4577.png?compress=1&resize=800x600\" alt=\"\"/>\n            </div>\n        }\n        return elements.map(el => (\n             <TodoItem key={el.id} todo={el} refreshData={getAllTodosHandler}/>\n        ))\n    }\n    return (\n        <>\n            <ul className=\"collection col s12 m8 offset-m2 l6 offset-l3 mB-5 mT-4\" >\n                {renderItemHandler()}\n            </ul>\n        </>\n    )\n}","import React from \"react\";\nimport {TodoList} from \"../components/TodoList\";\n\nexport const EditTodoPage: React.FC = () => {\n    return (\n        <>\n           <TodoList edit={true}/>\n        </>\n    )\n}","import React, {Dispatch, useEffect} from \"react\";\nimport {useTypeSelector} from \"../store/typeHooks\";\nimport {useDispatch} from \"react-redux\";\nimport {getAllTodos} from \"../utils/api\";\nimport {IReduxState, ITodoElem} from \"../utils/interfaces\";\nimport {set_all_todos} from \"../store/actions\";\nimport {TodoItem} from \"../components/TodoItem\";\nimport {Action} from \"redux\";\n\nexport const CompleteItems: React.FC = () => {\n    const {todos} = useTypeSelector<IReduxState>(state => state)\n\n    const dispatch = useDispatch<Dispatch<Action>>()\n    const getAllTodosHandler = async () : Promise<any> => {\n        try {\n            const response = await getAllTodos()\n            if(response) {\n                const key = Object.keys(response)\n                const data : ITodoElem[] = []\n                key.map(key => {\n                    data.push({...response[key], id: key})\n                })\n                dispatch(set_all_todos(data))\n            } else {\n                dispatch(set_all_todos([]))\n            }\n\n        } catch (e) {\n            console.log(e, 'e')\n        }\n    }\n    useEffect(() => {\n        getAllTodosHandler()\n    },[])\n    const renderItemHandler = () => {\n        const elements :ITodoElem[] = todos.filter(i => i.complete && !i.deleted)\n        if (!elements.length) {\n            return <div className={'center'}>\n                <img src=\"https://cdn.dribbble.com/users/634336/screenshots/2246883/media/7beefb96feac302ee313cf510fca4577.png?compress=1&resize=800x600\" alt=\"\"/>\n            </div>\n        }\n        return elements.map(el => (\n            <TodoItem key={el.id} todo={el} refreshData={getAllTodosHandler}/>\n        ))\n    }\n    return (\n        <>\n            <ul className=\"collection col s12 m8 offset-m2 l6 offset-l3 mB-5 mT-4\" >\n                {renderItemHandler()}\n            </ul>\n        </>\n    )\n}","import React from \"react\";\nimport {Routes,Route} from 'react-router-dom'\nimport {Home} from \"../pages/Home\";\nimport {NotFoundPage} from \"../pages/404\";\nimport {ChosenItemsPage} from \"../pages/ChosenItemsPage\";\nimport {DeletedItemsPage} from \"../pages/DeletedItemsPage\";\nimport {ActiveItemsPage} from \"../pages/ActiveItemsPage\";\nimport {EditTodoPage} from \"../pages/EditTodoPage\";\nimport {CompleteItems} from \"../pages/CompleteItems\";\n\nexport const RoutesComponent = () => {\n    return (\n        <>\n            <Routes>\n                <Route path={'/'} element={<Home/>}/>\n                <Route path={'/todo/:id'} element={<EditTodoPage/>}/>\n                <Route path={'/chosen_items'} element={<ChosenItemsPage />}/>\n                <Route path={'/deleted_items'} element={<DeletedItemsPage />}/>\n                <Route path={'/active_items'} element={<ActiveItemsPage />}/>\n                <Route path={'/completed_items'} element={<CompleteItems />}/>\n                <Route path={'*'} element={<NotFoundPage/>}/>\n            </Routes>\n        </>\n    )\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nexport const Navbar: React.FC = () :JSX.Element => {\n    return (\n        <nav className={'navbar-fixed'}>\n            <div className=\"nav-wrapper indigo pX-3 \">\n                <NavLink to=\"/\" className=\"brand-logo\">\n                    Ts\n                </NavLink>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li><NavLink to=\"/active_items\">ACTIVE</NavLink></li>\n                    <li><NavLink to=\"/completed_items\">COMPLETED</NavLink></li>\n                    <li><NavLink to=\"/chosen_items\">CHOSEN</NavLink></li>\n                    <li><NavLink to=\"/deleted_items\">DELETED</NavLink></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from \"react\";\n\nexport const Footer: React.FC = () :JSX.Element => {\n    return (\n        <footer className={'page-footer indigo footer-fixed'}>\n            <div className=\"footer-copyright pX-3\">\n                © 2021 TypeScript  Course\n                <a className=\"grey-text text-lighten-4 right\" href=\"https://github.com/amaratovich\" target={\"_blank\"}>GitHub Link</a>\n            </div>\n        </footer>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {RoutesComponent} from \"./routes/router\";\nimport {Navbar} from \"./components/Navbar\";\nimport {Footer} from \"./components/Footer\";\nimport {useSelector} from \"react-redux\";\n\nconst App: React.FC = () :JSX.Element => {\n\nconst state = useSelector(state => state)\n\n  return (\n    <div className={'s12'}>\n       <Navbar/>\n        <div className={'container'}>\n            <RoutesComponent/>\n        </div>\n       <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    IReduxActionAddTodo, IReduxActionChangeLoading,\n    IReduxActionDeleteTodo,\n    IReduxActionEditTodo,\n    IReduxActionSetAllTodos,\n    IReduxState\n} from \"../utils/interfaces\";\nimport {actionTypes} from \"./types\";\n\nconst initialState : IReduxState= {\n    todos: [],\n    loading: false\n}\ntype Action = IReduxActionAddTodo | IReduxActionDeleteTodo | IReduxActionEditTodo | IReduxActionSetAllTodos | IReduxActionChangeLoading\n\nexport const rootReducer = (state = initialState, action : Action) : IReduxState => {\n    switch (action.type) {\n        case actionTypes.SET_ALL_TODOS:\n            return {\n                ...state,\n                todos :action.payload\n            }\n            break;\n        case actionTypes.ADD_TODO:\n            return {\n                ...state,\n                todos : [...state.todos,action.payload]\n            }\n            break;\n        case actionTypes.CHANGE_LOADING:\n            return {\n                ...state,\n                loading : action.payload\n            }\n            break;\n        default:\n            return state\n        break;\n    }\n}\nexport type rootTypeReducer = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {rootReducer} from \"./store/reducer\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools())\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n             <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nreportWebVitals();\n"],"sourceRoot":""}